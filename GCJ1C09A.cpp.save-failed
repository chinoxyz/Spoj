#include <cstdio>
#include <algorithm>
#include<iostream>
#include<vector>
#include<climits>
#include <complex>
#include <iostream>
#include <valarray>
#include<cstring>
#include<queue>
#include<bitset>
#include<map>
#include<set>
#include<sstream>
#include<ctime>
#include <stack>
#include <iomanip>
#include <cassert>
#include<cmath>


using namespace std;


#define PB push_back
#define i64 long long
#define FOR(i,a,b) for(i=(a);i<(b);++i)
#define FORE(i,a,b) for(i=(a);i<=(b);++i)
#define REP(i,n) FOR(i,0,n)
#define REPE(i,n) FORE(i,0,n)
#define SZ(v) ((v).size())
#define LD long double
#define VI vector<int>
#define VS vector<string>
#define VD vector<double>
#define VLD vector<LD>
#define MSET(x,y) memset((x),(y),sizeof(x))
#define SZOF(x) sizeof((x))
#define VVI vector< VI >
#define PII pair< int,int >
#define VPII vector< PII >
#define MP make_pair
#define PIPII pair<int, PII >
#define PIPIPII pair< int, PIPII >
#define u64 unsigned i64
#define Vi64 vector<i64>
#define Vu64 vector<u64>

#define MAXN 36
#define MAXL 66

int vis[MAXN];
char arr[MAXL];
int ans[MAXL];


int encode(char c)
{
    int ti;
    if(c>='a' && c<='z')
    {
        ti=c-'a';
    }
    else
    {
        ti=26+c-'a';
    }

    return ti;
}


void solve()
{
    int lenn=strlen(arr);
    MSET(ans,0);

    MSET(vis,0);
    int n=0;
    int ti;

    for(int i=0;i<lenn;++i)
    {

        ti=encode(arr[i]);
        if(!vis[ti])
        {
            vis[ti]=1;
            ++n;
        }
    }

    n=max(n,2);
    MSET(vis,-1);

    ans[0]=1;
    ti=encode(arr[0]);
    vis[ti]=1;

    int nxt=0;

    for(int i=1;i<lenn;++i)
    {
        ti=encode(arr[i]);
        if(vis[ti]!=-1)
        {
            ans[i]=vis[ti];
        }
        else
        {
            vis[ti]=
        }
    }


}



int main()
{
    freopen("Text/GCJ1C09A.txt","r",stdin);

    int cases;

    scanf("%d",&cases);

    while(cases--)
    {
        scanf("%s",arr);
    }





    return 0;
}

